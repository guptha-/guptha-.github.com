// atob creates an array from a string of binary data
// then split turns it into an array
files["If_ne.dex"] = binaryStringToArray(window.atob(""));
assert( isArray(JavaLibraryDex), "Autogenerated assert for If_ne.dex existing");
