00000000 :	64 65 78 0A 
		30 33 35 00 
		magic: dex\n035\0
00000008 :	DD 63 52 93 
		checksum
0000000C :	0D 25 E8 B7 
		9D 49 CC 1A 
		83 00 27 AF 
		2E B6 14 12 
		3C D0 CF 67 
		signature
00000020 :	FC 02 00 00 
		file size: 0x000002FC
00000024 :	70 00 00 00 
		header size: 0x00000070
00000028 :	78 56 34 12 
		00 00 00 00 
		link size: 0x00000000
00000030 :	00 00 00 00 
		link offset: 0x00000000
00000034 :	5C 02 00 00 
		map offset: 0x0000025C
00000038 :	10 00 00 00 
		string ids size: 0x00000010
0000003C :	70 00 00 00 
		string ids offset: 0x00000070
00000040 :	07 00 00 00 
		type ids size: 0x00000007
00000044 :	B0 00 00 00 
		type ids offset: 0x000000B0
00000048 :	03 00 00 00 
		proto ids size: 0x00000003
0000004C :	CC 00 00 00 
		proto ids offset: 0x000000CC
00000050 :	01 00 00 00 
		field ids size: 0x00000001
00000054 :	F0 00 00 00 
		field ids offset: 0x000000F0
00000058 :	04 00 00 00 
		method ids size: 0x00000004
0000005C :	F8 00 00 00 
		method ids offset: 0x000000F8
00000060 :	01 00 00 00 
		class defs size: 0x00000001
00000064 :	18 01 00 00 
		class defs offset: 0x00000118
00000068 :	C4 01 00 00 
		data size: 0x000001C4
0000006C :	38 01 00 00 
		data offset: 0x00000138
00000070 :	7E 01 00 00 
		string[0]: at 0x0000017E
00000074 :	86 01 00 00 
		string[1]: at 0x00000186
00000078 :	94 01 00 00 
		string[2]: at 0x00000194
0000007C :	A5 01 00 00 
		string[3]: at 0x000001A5
00000080 :	B3 01 00 00 
		string[4]: at 0x000001B3
00000084 :	CA 01 00 00 
		string[5]: at 0x000001CA
00000088 :	DE 01 00 00 
		string[6]: at 0x000001DE
0000008C :	F2 01 00 00 
		string[7]: at 0x000001F2
00000090 :	06 02 00 00 
		string[8]: at 0x00000206
00000094 :	09 02 00 00 
		string[9]: at 0x00000209
00000098 :	0D 02 00 00 
		string[10]: at 0x0000020D
0000009C :	22 02 00 00 
		string[11]: at 0x00000222
000000A0 :	28 02 00 00 
		string[12]: at 0x00000228
000000A4 :	2E 02 00 00 
		string[13]: at 0x0000022E
000000A8 :	33 02 00 00 
		string[14]: at 0x00000233
000000AC :	3C 02 00 00 
		string[15]: at 0x0000023C
// string[0]: <init>
// string[1]: Hello, World
// string[2]: HelloWorld.java
// string[3]: LHelloWorld;
// string[4]: Ljava/io/PrintStream;
// string[5]: Ljava/lang/Object;
// string[6]: Ljava/lang/String;
// string[7]: Ljava/lang/System;
// string[8]: V
// string[9]: VL
// string[10]: [Ljava/lang/String;
// string[11]: args
// string[12]: main
// string[13]: out
// string[14]: println
// string[15]: this
000000B0 :	03 00 00 00 
		type[0] index: 00000003 (LHelloWorld;)
000000B4 :	04 00 00 00 
		type[1] index: 00000004 (Ljava/io/PrintStream;)
000000B8 :	05 00 00 00 
		type[2] index: 00000005 (Ljava/lang/Object;)
000000BC :	06 00 00 00 
		type[3] index: 00000006 (Ljava/lang/String;)
000000C0 :	07 00 00 00 
		type[4] index: 00000007 (Ljava/lang/System;)
000000C4 :	08 00 00 00 
		type[5] index: 00000008 (V)
000000C8 :	0A 00 00 00 
		type[6] index: 0000000A ([Ljava/lang/String;)
000000CC :	08 00 00 00 
		05 00 00 00 
		00 00 00 00 
		proto[0]: short signature: V; return type: V; parameter block offset: 00000000
000000D8 :	09 00 00 00 
		05 00 00 00 
		70 01 00 00 
		proto[1]: short signature: VL; return type: V; parameter block offset: 00000170
000000E4 :	09 00 00 00 
		05 00 00 00 
		78 01 00 00 
		proto[2]: short signature: VL; return type: V; parameter block offset: 00000178
// proto[0]: V proto(  )
// proto[1]: V proto( Ljava/lang/String; )
// proto[2]: V proto( [Ljava/lang/String; )
000000F0 :	04 00 01 00 
		0D 00 00 00 
		field[0]: java/lang/System.out Ljava/io/PrintStream;
000000F8 :	00 00 00 00 
		00 00 00 00 
		method[0]: HelloWorld/<init> (<init>()V)
00000100 :	00 00 02 00 
		0C 00 00 00 
		method[1]: HelloWorld/main (main([Ljava/lang/String;)V)
00000108 :	01 00 01 00 
		0E 00 00 00 
		method[2]: java/io/PrintStream/println (println(Ljava/lang/String;)V)
00000110 :	02 00 00 00 
		00 00 00 00 
		method[3]: java/lang/Object/<init> (<init>()V)
00000118 :	00 00 00 00 
		01 00 00 00 
		02 00 00 00 
		00 00 00 00 
		02 00 00 00 
		00 00 00 00 
		4E 02 00 00 
		00 00 00 00 
		public HelloWorld
// public  class HelloWorld:
// super: java/lang/Object
// source: HelloWorld.java
0000024E :	00 static fields size: 0
0000024F :	00 instance fields size: 0
00000250 :	02 direct methods size: 2
00000251 :	00 virtual methods size: 0
00000252 :	00 81 80 04 
		B8 02 // direct method[0]: <init>()V
00000258 :	01 09 D0 02 
		// direct method[1]: main([Ljava/lang/String;)V
--------------------------------------
Class: HelloWorld
****************************
Method: public <init>()V
00000138 :	01 00 registers size: 1
0000013A :	01 00 input arguments: 1
0000013C :	01 00 output arguments: 1
0000013E :	00 00 try block size: 0
00000140 :	42 02 00 00 
		debug info offset: 0x242
00000144 :	04 00 00 00 
		instruction block size: 4
method block: 0x148-0x150
next block starts at: 0x150
00000242 :	09 Starting line: 9
00000243 :	00 Parameter number: 0
00000244 :	07 DBG_SET_PROLOGUE_END
00000245 :	0E Line register: 9; address register: 0x0
00000246 :	00 DBG_END_SEQUENCE
	invoke-direct	{v0},java/lang/Object/<init>	; <init>()V
	return-void	
****************************
Method: public static main([Ljava/lang/String;)V
00000150 :	03 00 registers size: 3
00000152 :	01 00 input arguments: 1
00000154 :	02 00 output arguments: 2
00000156 :	00 00 try block size: 0
00000158 :	47 02 00 00 
		debug info offset: 0x247
0000015C :	08 00 00 00 
		instruction block size: 8
method block: 0x160-0x170
next block starts at: 0x170
00000247 :	10 Starting line: 16
00000248 :	01 Parameter number: 1
00000249 :	0C reg#-1 : args
0000024A :	07 DBG_SET_PROLOGUE_END
0000024B :	0E Line register: 16; address register: 0x0
0000024C :	79 Line register: 18; address register: 0x7
0000024D :	00 DBG_END_SEQUENCE
	sget-object	v0,java/lang/System.out Ljava/io/PrintStream;
	const-string	v1,"Hello, World"
	invoke-virtual	{v0,v1},java/io/PrintStream/println	; println(Ljava/lang/String;)V
	return-void	
